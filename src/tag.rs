use once_cell::sync::Lazy;
use std::{collections::HashSet, sync::Mutex};

pub static FUNCTION_TAGS: Lazy<Mutex<HashSet<String>>> = Lazy::new(|| {
    let mut m = HashSet::new();

    m.insert("admincgipath".to_string());
    m.insert("adminscript".to_string());
    m.insert("app:actionbar".to_string());
    m.insert("app:link".to_string());
    m.insert("app:listfilters".to_string());
    m.insert("app:pageactions".to_string());
    m.insert("archivecategory".to_string());
    m.insert("archivecount".to_string());
    m.insert("archivedate".to_string());
    m.insert("archivedateend".to_string());
    m.insert("archivefile".to_string());
    m.insert("archivelabel".to_string());
    m.insert("archivelink".to_string());
    m.insert("archivetitle".to_string());
    m.insert("archivetype".to_string());
    m.insert("archivetypelabel".to_string());
    m.insert("assetaddedby".to_string());
    m.insert("assetblogid".to_string());
    m.insert("assetcount".to_string());
    m.insert("assetdateadded".to_string());
    m.insert("assetdescription".to_string());
    m.insert("assetfileext".to_string());
    m.insert("assetfilename".to_string());
    m.insert("assetfilepath".to_string());
    m.insert("assetid".to_string());
    m.insert("assetlabel".to_string());
    m.insert("assetlink".to_string());
    m.insert("assetmimetype".to_string());
    m.insert("assetproperty".to_string());
    m.insert("assetrank".to_string());
    m.insert("assetscore".to_string());
    m.insert("assetscoreavg".to_string());
    m.insert("assetscorecount".to_string());
    m.insert("assetscorehigh".to_string());
    m.insert("assetscorelow".to_string());
    m.insert("assetsiteid".to_string());
    m.insert("assetthumbnaillink".to_string());
    m.insert("assetthumbnailurl".to_string());
    m.insert("assettype".to_string());
    m.insert("asseturl".to_string());
    m.insert("atomscript".to_string());
    m.insert("audiocustomfielddescription".to_string());
    m.insert("audiocustomfieldname".to_string());
    m.insert("audiocustomfieldvalue".to_string());
    m.insert("authorauthiconurl".to_string());
    m.insert("authorauthtype".to_string());
    m.insert("authorbasename".to_string());
    m.insert("authorcommentcount".to_string());
    m.insert("authorcontentcount".to_string());
    m.insert("authorcustomfielddescription".to_string());
    m.insert("authorcustomfieldname".to_string());
    m.insert("authorcustomfieldvalue".to_string());
    m.insert("authordisplayname".to_string());
    m.insert("authoremail".to_string());
    m.insert("authorentriescount".to_string());
    m.insert("authorentrycount".to_string());
    m.insert("authorfavoriteentries".to_string());
    m.insert("authorfollowerscount".to_string());
    m.insert("authorfollowingcount".to_string());
    m.insert("authorfollowlink".to_string());
    m.insert("authorid".to_string());
    m.insert("authorname".to_string());
    m.insert("authorrank".to_string());
    m.insert("authorscore".to_string());
    m.insert("authorscoreavg".to_string());
    m.insert("authorscorecount".to_string());
    m.insert("authorscorehigh".to_string());
    m.insert("authorscorelow".to_string());
    m.insert("authorunfollowlink".to_string());
    m.insert("authorurl".to_string());
    m.insert("authoruserpic".to_string());
    m.insert("authoruserpicurl".to_string());
    m.insert("blockeditorblockasset".to_string());
    m.insert("blockeditorblocks".to_string());
    m.insert("blogarchiveurl".to_string());
    m.insert("blogcategorycount".to_string());
    m.insert("blogcclicenseimage".to_string());
    m.insert("blogcclicenseurl".to_string());
    m.insert("blogcommentcount".to_string());
    m.insert("blogcustomfielddescription".to_string());
    m.insert("blogcustomfieldname".to_string());
    m.insert("blogcustomfieldvalue".to_string());
    m.insert("blogdatelanguage".to_string());
    m.insert("blogdescription".to_string());
    m.insert("blogentrycount".to_string());
    m.insert("blogfileextension".to_string());
    m.insert("bloghost".to_string());
    m.insert("blogid".to_string());
    m.insert("bloglanguage".to_string());
    m.insert("blogname".to_string());
    m.insert("blogpagecount".to_string());
    m.insert("blogpingcount".to_string());
    m.insert("blogrelativeurl".to_string());
    m.insert("blogsitepath".to_string());
    m.insert("blogtemplatesetid".to_string());
    m.insert("blogthemeid".to_string());
    m.insert("blogtimezone".to_string());
    m.insert("blogurl".to_string());
    m.insert("buildtemplateid".to_string());
    m.insert("calendarcellnumber".to_string());
    m.insert("calendardate".to_string());
    m.insert("calendarday".to_string());
    m.insert("canonicallink".to_string());
    m.insert("canonicalurl".to_string());
    m.insert("captchafields".to_string());
    m.insert("categoryarchivelink".to_string());
    m.insert("categorybasename".to_string());
    m.insert("categorycommentcount".to_string());
    m.insert("categorycount".to_string());
    m.insert("categorycustomfielddescription".to_string());
    m.insert("categorycustomfieldname".to_string());
    m.insert("categorycustomfieldvalue".to_string());
    m.insert("categorydescription".to_string());
    m.insert("categoryid".to_string());
    m.insert("categorylabel".to_string());
    m.insert("categorysetname".to_string());
    m.insert("categorytrackbackcount".to_string());
    m.insert("categorytrackbacklink".to_string());
    m.insert("cclicenserdf".to_string());
    m.insert("cgihost".to_string());
    m.insert("cgipath".to_string());
    m.insert("cgirelativeurl".to_string());
    m.insert("cgiserverpath".to_string());
    m.insert("commentauthor".to_string());
    m.insert("commentauthoridentity".to_string());
    m.insert("commentauthorlink".to_string());
    m.insert("commentblogid".to_string());
    m.insert("commentbody".to_string());
    m.insert("commentcustomfielddescription".to_string());
    m.insert("commentcustomfieldname".to_string());
    m.insert("commentcustomfieldvalue".to_string());
    m.insert("commentdate".to_string());
    m.insert("commentemail".to_string());
    m.insert("commententryid".to_string());
    m.insert("commenterauthiconurl".to_string());
    m.insert("commenterauthtype".to_string());
    m.insert("commenteremail".to_string());
    m.insert("commenterid".to_string());
    m.insert("commentername".to_string());
    m.insert("commenternamethunk".to_string());
    m.insert("commenterurl".to_string());
    m.insert("commenterusername".to_string());
    m.insert("commenteruserpic".to_string());
    m.insert("commenteruserpicurl".to_string());
    m.insert("commentid".to_string());
    m.insert("commentip".to_string());
    m.insert("commentlink".to_string());
    m.insert("commentname".to_string());
    m.insert("commentordernumber".to_string());
    m.insert("commentparentid".to_string());
    m.insert("commentpreviewauthor".to_string());
    m.insert("commentpreviewauthorlink".to_string());
    m.insert("commentpreviewbody".to_string());
    m.insert("commentpreviewdate".to_string());
    m.insert("commentpreviewemail".to_string());
    m.insert("commentpreviewip".to_string());
    m.insert("commentpreviewisstatic".to_string());
    m.insert("commentpreviewurl".to_string());
    m.insert("commentrank".to_string());
    m.insert("commentrepliesrecurse".to_string());
    m.insert("commentreplytolink".to_string());
    m.insert("commentscore".to_string());
    m.insert("commentscoreavg".to_string());
    m.insert("commentscorecount".to_string());
    m.insert("commentscorehigh".to_string());
    m.insert("commentscorelow".to_string());
    m.insert("commentscript".to_string());
    m.insert("commentsiteid".to_string());
    m.insert("commenturl".to_string());
    m.insert("communityscript".to_string());
    m.insert("configfile".to_string());
    m.insert("contentauthordisplayname".to_string());
    m.insert("contentauthoremail".to_string());
    m.insert("contentauthorid".to_string());
    m.insert("contentauthorlink".to_string());
    m.insert("contentauthorurl".to_string());
    m.insert("contentauthorusername".to_string());
    m.insert("contentauthoruserpic".to_string());
    m.insert("contentauthoruserpicurl".to_string());
    m.insert("contentcreateddate".to_string());
    m.insert("contentdatasearchscript".to_string());
    m.insert("contentdate".to_string());
    m.insert("contentfieldvalue".to_string());
    m.insert("contentid".to_string());
    m.insert("contentidentifier".to_string());
    m.insert("contentlabel".to_string());
    m.insert("contentmodifiedauthordisplayname".to_string());
    m.insert("contentmodifiedauthoremail".to_string());
    m.insert("contentmodifiedauthorid".to_string());
    m.insert("contentmodifiedauthorlink".to_string());
    m.insert("contentmodifiedauthorurl".to_string());
    m.insert("contentmodifiedauthorusername".to_string());
    m.insert("contentmodifiedauthoruserpic".to_string());
    m.insert("contentmodifiedauthoruserpicasset".to_string());
    m.insert("contentmodifiedauthoruserpicurl".to_string());
    m.insert("contentmodifieddate".to_string());
    m.insert("contentpermalink".to_string());
    m.insert("contentscount".to_string());
    m.insert("contentsitedescription".to_string());
    m.insert("contentsiteid".to_string());
    m.insert("contentsitename".to_string());
    m.insert("contentsiteurl".to_string());
    m.insert("contentstatus".to_string());
    m.insert("contenttypedescription".to_string());
    m.insert("contenttypeid".to_string());
    m.insert("contenttypename".to_string());
    m.insert("contenttypeuniqueid".to_string());
    m.insert("contentuniqueid".to_string());
    m.insert("contentunpublisheddate".to_string());
    m.insert("currentpage".to_string());
    m.insert("customfieldbasename".to_string());
    m.insert("customfielddescription".to_string());
    m.insert("customfieldhtml".to_string());
    m.insert("customfieldname".to_string());
    m.insert("customfieldvalue".to_string());
    m.insert("dataapiscript".to_string());
    m.insert("dataapiversion".to_string());
    m.insert("date".to_string());
    m.insert("defaultlanguage".to_string());
    m.insert("entriescount".to_string());
    m.insert("entryatomid".to_string());
    m.insert("entryauthor".to_string());
    m.insert("entryauthordisplayname".to_string());
    m.insert("entryauthoremail".to_string());
    m.insert("entryauthorid".to_string());
    m.insert("entryauthorlink".to_string());
    m.insert("entryauthornickname".to_string());
    m.insert("entryauthorurl".to_string());
    m.insert("entryauthorusername".to_string());
    m.insert("entryauthoruserpic".to_string());
    m.insert("entryauthoruserpicurl".to_string());
    m.insert("entrybasename".to_string());
    m.insert("entryblogdescription".to_string());
    m.insert("entryblogid".to_string());
    m.insert("entryblogname".to_string());
    m.insert("entryblogurl".to_string());
    m.insert("entrybody".to_string());
    m.insert("entrycategory".to_string());
    m.insert("entryclass".to_string());
    m.insert("entryclasslabel".to_string());
    m.insert("entrycommentcount".to_string());
    m.insert("entrycreateddate".to_string());
    m.insert("entrycustomfielddescription".to_string());
    m.insert("entrycustomfieldname".to_string());
    m.insert("entrycustomfieldvalue".to_string());
    m.insert("entrydate".to_string());
    m.insert("entryeditlink".to_string());
    m.insert("entryexcerpt".to_string());
    m.insert("entryflag".to_string());
    m.insert("entryid".to_string());
    m.insert("entrykeywords".to_string());
    m.insert("entrylink".to_string());
    m.insert("entrymodifiedauthordisplayname".to_string());
    m.insert("entrymodifiedauthoremail".to_string());
    m.insert("entrymodifiedauthorid".to_string());
    m.insert("entrymodifiedauthorlink".to_string());
    m.insert("entrymodifiedauthorurl".to_string());
    m.insert("entrymodifiedauthorusername".to_string());
    m.insert("entrymodifiedauthoruserpic".to_string());
    m.insert("entrymodifiedauthoruserpicasset".to_string());
    m.insert("entrymodifiedauthoruserpicurl".to_string());
    m.insert("entrymodifieddate".to_string());
    m.insert("entrymore".to_string());
    m.insert("entrypermalink".to_string());
    m.insert("entryrank".to_string());
    m.insert("entryrecommendedtotal".to_string());
    m.insert("entryrecommendvotelink".to_string());
    m.insert("entryscore".to_string());
    m.insert("entryscoreavg".to_string());
    m.insert("entryscorecount".to_string());
    m.insert("entryscorehigh".to_string());
    m.insert("entryscorelow".to_string());
    m.insert("entrysitedescription".to_string());
    m.insert("entrysiteid".to_string());
    m.insert("entrysitename".to_string());
    m.insert("entrysiteurl".to_string());
    m.insert("entrystatus".to_string());
    m.insert("entrytitle".to_string());
    m.insert("entrytrackbackcount".to_string());
    m.insert("entrytrackbackdata".to_string());
    m.insert("entrytrackbackid".to_string());
    m.insert("entrytrackbacklink".to_string());
    m.insert("errormessage".to_string());
    m.insert("feedbackscore".to_string());
    m.insert("feedentrylink".to_string());
    m.insert("feedentrytitle".to_string());
    m.insert("feedinclude".to_string());
    m.insert("feedlink".to_string());
    m.insert("feedtitle".to_string());
    m.insert("filecustomfielddescription".to_string());
    m.insert("filecustomfieldname".to_string());
    m.insert("filecustomfieldvalue".to_string());
    m.insert("filetemplate".to_string());
    m.insert("folderbasename".to_string());
    m.insert("foldercount".to_string());
    m.insert("foldercustomfielddescription".to_string());
    m.insert("foldercustomfieldname".to_string());
    m.insert("foldercustomfieldvalue".to_string());
    m.insert("folderdescription".to_string());
    m.insert("folderid".to_string());
    m.insert("folderlabel".to_string());
    m.insert("folderpath".to_string());
    m.insert("getvar".to_string());
    m.insert("httpcontenttype".to_string());
    m.insert("ifentryrecommended".to_string());
    m.insert("imagecustomfielddescription".to_string());
    m.insert("imagecustomfieldname".to_string());
    m.insert("imagecustomfieldvalue".to_string());
    m.insert("imageheight".to_string());
    m.insert("imageurl".to_string());
    m.insert("imagewidth".to_string());
    m.insert("include".to_string());
    m.insert("indexbasename".to_string());
    m.insert("indexlink".to_string());
    m.insert("indexname".to_string());
    m.insert("link".to_string());
    m.insert("maxresults".to_string());
    m.insert("nextlink".to_string());
    m.insert("notifyscript".to_string());
    m.insert("otherprofilevar".to_string());
    m.insert("pageauthordisplayname".to_string());
    m.insert("pageauthoremail".to_string());
    m.insert("pageauthorlink".to_string());
    m.insert("pageauthorurl".to_string());
    m.insert("pagebasename".to_string());
    m.insert("pagebody".to_string());
    m.insert("pagecustomfielddescription".to_string());
    m.insert("pagecustomfieldname".to_string());
    m.insert("pagecustomfieldvalue".to_string());
    m.insert("pagedate".to_string());
    m.insert("pageexcerpt".to_string());
    m.insert("pageid".to_string());
    m.insert("pagekeywords".to_string());
    m.insert("pagemodifiedauthordisplayname".to_string());
    m.insert("pagemodifiedauthoremail".to_string());
    m.insert("pagemodifiedauthorlink".to_string());
    m.insert("pagemodifiedauthorurl".to_string());
    m.insert("pagemodifieddate".to_string());
    m.insert("pagemore".to_string());
    m.insert("pagepermalink".to_string());
    m.insert("pagerlink".to_string());
    m.insert("pagetitle".to_string());
    m.insert("passwordvalidation".to_string());
    m.insert("passwordvalidationrule".to_string());
    m.insert("pingblogname".to_string());
    m.insert("pingdate".to_string());
    m.insert("pingexcerpt".to_string());
    m.insert("pingid".to_string());
    m.insert("pingip".to_string());
    m.insert("pingrank".to_string());
    m.insert("pingscore".to_string());
    m.insert("pingscoreavg".to_string());
    m.insert("pingscorecount".to_string());
    m.insert("pingscorehigh".to_string());
    m.insert("pingscorelow".to_string());
    m.insert("pingssenturl".to_string());
    m.insert("pingtitle".to_string());
    m.insert("pingurl".to_string());
    m.insert("previouslink".to_string());
    m.insert("productname".to_string());
    m.insert("publishcharset".to_string());
    m.insert("remotesigninlink".to_string());
    m.insert("remotesignoutlink".to_string());
    m.insert("scoredate".to_string());
    m.insert("searchincludeblogs".to_string());
    m.insert("searchmaxresults".to_string());
    m.insert("searchresultcount".to_string());
    m.insert("searchresultsfooter".to_string());
    m.insert("searchresultsheader".to_string());
    m.insert("searchscript".to_string());
    m.insert("searchstring".to_string());
    m.insert("searchtemplateblogid".to_string());
    m.insert("searchtemplateid".to_string());
    m.insert("setvar".to_string());
    m.insert("signinlink".to_string());
    m.insert("signonurl".to_string());
    m.insert("signoutlink".to_string());
    m.insert("sitearchiveurl".to_string());
    m.insert("sitecategorycount".to_string());
    m.insert("sitecclicenseimage".to_string());
    m.insert("sitecclicenseurl".to_string());
    m.insert("sitecommentcount".to_string());
    m.insert("sitecontentcount".to_string());
    m.insert("sitedatelanguage".to_string());
    m.insert("sitedescription".to_string());
    m.insert("siteentrycount".to_string());
    m.insert("sitefileextension".to_string());
    m.insert("sitehost".to_string());
    m.insert("siteid".to_string());
    m.insert("sitelanguage".to_string());
    m.insert("sitename".to_string());
    m.insert("sitepagecount".to_string());
    m.insert("siteparentsite".to_string());
    m.insert("sitepath".to_string());
    m.insert("sitepingcount".to_string());
    m.insert("siterelativeurl".to_string());
    m.insert("sitethemeid".to_string());
    m.insert("sitetimezone".to_string());
    m.insert("siteurl".to_string());
    m.insert("smartypantsversion".to_string());
    m.insert("staticfilepath".to_string());
    m.insert("staticwebpath".to_string());
    m.insert("statssnippet".to_string());
    m.insert("subcategorypath".to_string());
    m.insert("subcatsrecurse".to_string());
    m.insert("subfolderrecurse".to_string());
    m.insert("supportdirectoryurl".to_string());
    m.insert("tagcount".to_string());
    m.insert("tagid".to_string());
    m.insert("taglabel".to_string());
    m.insert("tagname".to_string());
    m.insert("tagrank".to_string());
    m.insert("tagsearchlink".to_string());
    m.insert("templatecreatedon".to_string());
    m.insert("templatecustomfielddescription".to_string());
    m.insert("templatecustomfieldname".to_string());
    m.insert("templatecustomfieldvalue".to_string());
    m.insert("templatenote".to_string());
    m.insert("textileheadoffset".to_string());
    m.insert("textileoptions".to_string());
    m.insert("totalpages".to_string());
    m.insert("trackbackscript".to_string());
    m.insert("typekeytoken".to_string());
    m.insert("usersessionstate".to_string());
    m.insert("var".to_string());
    m.insert("version".to_string());
    m.insert("videocustomfielddescription".to_string());
    m.insert("videocustomfieldname".to_string());
    m.insert("videocustomfieldvalue".to_string());
    m.insert("websitecclicenseimage".to_string());
    m.insert("websitecclicenseurl".to_string());
    m.insert("websitecommentcount".to_string());
    m.insert("websitecustomfielddescription".to_string());
    m.insert("websitecustomfieldname".to_string());
    m.insert("websitecustomfieldvalue".to_string());
    m.insert("websitedatelanguage".to_string());
    m.insert("websitedescription".to_string());
    m.insert("websiteentrycount".to_string());
    m.insert("websitefileextension".to_string());
    m.insert("websitehost".to_string());
    m.insert("websiteid".to_string());
    m.insert("websitelanguage".to_string());
    m.insert("websitename".to_string());
    m.insert("websitepagecount".to_string());
    m.insert("websitepath".to_string());
    m.insert("websitepingcount".to_string());
    m.insert("websiterelativeurl".to_string());
    m.insert("websitethemeid".to_string());
    m.insert("websitetimezone".to_string());
    m.insert("websiteurl".to_string());
    m.insert("widgetmanager".to_string());
    m.insert("widgetset".to_string());
    m.insert("xmlrpcscript".to_string());

    return Mutex::new(m);
});
